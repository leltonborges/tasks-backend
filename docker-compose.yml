version: "3"
services:
    db-prod:
        container_name: pg-prod
        image: postgres:11-buster
        networks:
            - prod_net_back
        environment:
            - POSTGRES_PASSWORD=passwd
            - POSTGRES_DB=tasks
            - POSTGRES_USER=tasks
        volumes:
            - prod_postgresql:/var/lib/postgresql
            - prod_postgresql_data:/var/lib/postgresql/data
              
    backend:
        container_name: backend-prod
        image: back_prod:build_${BUILD_NUMBER}
        build:
            context: .
            args:
                - PATH_WAR_FILE=target/tasks-backend.war
                - CONTEXT_NAME=tasks-backend
        networks:
            - prod_net_back
            - prod_net_front
        environment:
            - DATABASE_HOST=db-prod
            - DATABASE_PORT=5432
            - DATABASE_USER=tasks
            - DATABASE_PASSWD=passwd
            - DATABASE_UPDATE=none
        depends_on:
            - db-prod

    frontend:
        container_name: frontend-prod
        image: front_prod:build_${BUILD_NUMBER}
        build:
            context: .
            args:
                - PATH_WAR_FILE=tasks-front/target/tasks.war
                - CONTEXT_NAME=tasks
        networks:
            - prod_net_front
        ports:
            - 9999:8080
        environment:
            BACKEND_HOST: backend
            BACKEND_PORT: 8080
            APP_VERSION: build_${BUILD_NUMBER}
        depends_on:    
            - backend 

networks:
  prod_net_front:
  prod_net_back:

volumes:
  prod_postgresql:
  prod_postgresql_data: